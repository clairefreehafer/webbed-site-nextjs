@use "sass:math";
@use "sass:string";
@use "../variables";

// https://codepen.io/sarazond/pen/LYGbwj
// $n is number of stars
@function multiple-box-shadow($n) {
  $value: "#{math.random(2000)}px #{math.random(2000)}px #FFF";
  @for $i from 2 through $n {
    $value: "#{$value} , #{math.random(2000)}px #{math.random(2000)}px #FFF";
  }

  @return string.unquote($value);
}

@keyframes animStar {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-2000px);
  }
}

@mixin stars($size, $shadow-fn, $speed) {
  width: $size;
  height: $size;
  background: transparent;
  box-shadow: $shadow-fn;
  animation: animStar $speed linear infinite;
  overflow: hidden;

  @media screen and (prefers-reduced-motion: none) {
    animation: unset;
  }

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: $size;
    height: $size;
    background: transparent;
    box-shadow: $shadow-fn;
  }
}

.stars {
  position: absolute;
  top: 0;
  left: 0;
}

#stars1 {
  @media screen and (min-width: variables.$max-site-width) {
    @include stars(1px, multiple-box-shadow(700), 50s);
  }
}

#stars2 {
  @media screen and (min-width: variables.$max-site-width) {
    @include stars(2px, multiple-box-shadow(200), 100s);
  }
}

#stars3 {
  @media screen and (min-width: variables.$max-site-width) {
    @include stars(3px, multiple-box-shadow(100), 150s);
  }
}
